# This is a basic workflow to help you get started with Actions

name: Deploy POC
permissions:
  security-events: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "POC" ]
  #pull_request:
    #branches: [ "Development" ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:
#test
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  checkout:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: POC
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: View Contents
        run: ls -l

      - uses: actions/upload-artifact@master
        with:
          name: checkout-artifact
          path: ./

  terraform_validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: checkout
    defaults:
      run:
        working-directory: POC
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_subcommand: init
          tf_actions_version: 0.12.13
          tf_actions_working_dir: 'POC'
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_subcommand: validate
          tf_actions_version: 0.12.13
          tf_actions_working_dir: 'POC'

  terrascan_job:
    runs-on: ubuntu-latest
    needs: checkout
    defaults:
      run:
        working-directory: POC
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'terraform'
          iac_dir: 'POC'
          iac_version: 'v12'
          policy_type: 'aws'
          only_warn: 'false'
          #scm_token: ${{ secrets.ACCESS_TOKEN }}
          verbose: true
          sarif_upload: true
          #non_recursive:
          #iac_dir:
          #policy_path:
          #skip_rules:
          #config_path:
          #find_vulnerabilities:
          #webhook_url:
          #webhook_token:
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: terrascan.sarif

  terraform_plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [terraform_validate, terrascan_job]
    defaults:
      run:
        working-directory: POC
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_subcommand: init
          tf_actions_version: 0.12.13
          tf_actions_working_dir: 'POC'
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_subcommand: plan
          tf_actions_version: 0.12.13
          tf_actions_working_dir: 'POC'
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform_apply:
     # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    environment: poc
    defaults:
      run:
        working-directory: POC
     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_subcommand: init
          tf_actions_version: 0.12.13
          tf_actions_working_dir: 'POC'
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_subcommand: apply
          tf_actions_version: 0.12.13
          tf_actions_working_dir: 'POC'
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
